import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
BOT_TOKEN = "7882205686:AAEhWPfQ7ToP0PkRSkz2-EUmpNE0MKdqi9s"

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü—Ä–∏–≤–µ—Ç!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /test
@dp.message(Command("test"))
async def cmd_test(message: types.Message):
    await message.answer("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω! –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
@dp.message()
async def echo(message: types.Message):
    await message.answer(f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {message.text}")

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
async def main():
    logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")
    await dp.start_polling(bot)

if __name__ == "__main__":

    asyncio.run(main())
